database.oracle.config.url = jdbc:oracle:thin:@localhost:1521:XE
database.oracle.config.user = userForPort
database.oracle.config.password = 0000
database.oracle.connected.fail = Failed to connect to the Oracle database. Cause: %s

jsp.login = /WEB-INF/jsp/loginPage.jsp
jsp.main.noLogin = /WEB-INF/jsp/noLoginMainPage.jsp
jsp.undefinedCommand = /WEB-INF/jsp/undefinedCommandPage.jsp
#administrator pages URIs
jsp.admin.main = /WEB-INF/jsp/admin_pages/adminMainPage.jsp
jsp.admin.createUser = /WEB-INF/jsp/admin_pages/createUserPage.jsp
jsp.admin.createPier = /WEB-INF/jsp/admin_pages/createPierPage.jsp
jsp.admin.createShip = /WEB-INF/jsp/admin_pages/createShipPage.jsp
jsp.admin.editUser = /WEB-INF/jsp/admin_pages/editUserPage.jsp
#moderator pages URIs
jsp.moderator.main = /WEB-INF/jsp/moderator_pages/moderatorMainPage.jsp
#dispatcher pages URIs
jsp.dispatcher.main = /WEB-INF/jsp/dispatcher_pages/dispatcherMainPage.jsp
jsp.dispatcher.processStatement = /WEB-INF/jsp/dispatcher_pages/processingStatementPage.jsp
#captain pages URIs
jsp.captain.main = /WEB-INF/jsp/captain_pages/captainMainPage.jsp
jsp.captain.main.process = /WEB-INF/jsp/captain_pages/captainMainPageStatementProcess.jsp
jsp.captain.unload = /WEB-INF/jsp/captain_pages/captainUnloadPage.jsp
jsp.captain.load = /WEB-INF/jsp/captain_pages/captainLoadPage.jsp

#system pages attributes names
jsp.undefinedCommand.errorCommand = errorCommand

#commands URIs
uri.show.mainPage.admin = FrontController?command=SHOW_MAIN_ADMIN_PAGE
uri.show.mainPage.dispatcher = FrontController?command=SHOW_MAIN_DISPATCHER_PAGE
uri.show.mainPage.captain = FrontController?command=SHOW_MAIN_CAPTAIN_PAGE
uri.show.mainPage.moderator = FrontController?command=SHOW_MAIN_MODERATOR_PAGE
uri.show.mainPage.noLogin = FrontController?command=SHOW_MAIN_NO_LOGIN_PAGE
uri.show.processStatementPage = FrontController?command=SHOW_PROCESS_STATEMENT_PAGE
uri.show.createShipPage =  FrontController?command=SHOW_CREATE_SHIP_PAGE
uri.applyStatement = FrontController?command=APPLY_STATEMENT
uri.routing = FrontController?command=ROUTING_USER
uri.empty = FrontController?command=EMPTY_COMMAND

requests.sql.get.users.allUsers = SELECT users.id as user_id, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users_statuses.title != 'DELETED' ORDER BY users.id
requests.sql.get.user.byId = SELECT users.id AS user_id, users.login, users.password, users.status_id AS user_status_id, full_name, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users.id = ?
requests.sql.get.user.byLogin = SELECT users.id AS user_id, users.login, users.password, users.status_id AS user_status_id, full_name, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE login = ? AND users_statuses.title != 'DELETED'
requests.sql.get.users.count = SELECT COUNT(*) FROM users
requests.sql.get.users.lastId = SELECT id FROM (SELECT id FROM users ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.users.ships = SELECT ships.id AS ship_id, ships.title AS ship_title FROM ships WHERE user_id = ?
requests.sql.get.users.ships.lastId = SELECT id FROM (SELECT id FROM ships ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.users.roles = SELECT id AS role_id, title AS role_title FROM users_roles
requests.sql.get.users.role.byTitle = SELECT id AS role_id, title AS role_title FROM users_roles WHERE title = ?
requests.sql.get.users.status.byTitle = SELECT id AS user_status_id, title AS user_status_title FROM users_statuses WHERE title = ?
requests.sql.get.users.captains.id = SELECT users.id FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users_roles.title = 'CAPTAIN'  AND users.id NOT IN (SELECT user_id FROM ships) AND users_statuses.title != 'DELETED' 
requests.sql.get.users.byStatus = SELECT users.id as user_id, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users.status_id = ? ORDER BY users.id
requests.sql.get.users.active = SELECT users.id as user_id, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users_statuses.title = 'ONLINE' OR users_statuses.title = 'OFFLINE'  ORDER BY users.id
requests.sql.get.users.byRole = SELECT users.id as user_id, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title FROM users JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id WHERE users.role_id = ? ORDER BY users.id

requests.sql.get.ships.allShips = SELECT id AS ship_id, title AS ship_title FROM ships

requests.sql.get.piers.allPiers = SELECT pier_ids AS pier_id, pier_capacity, (pier_capacity - COUNT(goods.name)) AS r_c, pier_status FROM goods RIGHT JOIN ( SELECT DISTINCT piers.id AS pier_ids, piers.capacity AS pier_capacity, 'FREE' AS pier_status FROM piers LEFT JOIN statements ON statements.pier_id = piers.id WHERE piers.end_date IS null AND ((SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 1 AND statements.pier_id = piers.id) = (SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 0 AND statements.pier_id = piers.id)) UNION ALL SELECT piers.id AS pier_ids, piers.capacity AS pier_capacity, 'BUSY' AS pier_status FROM piers WHERE piers.end_date IS null AND ((SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 1 AND statements.pier_id = piers.id) != (SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 0 AND statements.pier_id = piers.id))) ON pier_ids = goods.pier_id GROUP BY pier_ids, pier_capacity, pier_status ORDER BY pier_ids
requests.sql.get.piers.count = SELECT COUNT(*) FROM piers WHERE end_date is null
requests.sql.get.piers.free =  SELECT pier_ids AS pier_id, pier_capacity, (pier_capacity - COUNT(goods.name)) AS r_c, pier_status FROM goods RIGHT JOIN (SELECT DISTINCT piers.id AS pier_ids, piers.capacity AS pier_capacity, 'FREE' AS pier_status FROM piers LEFT JOIN statements ON statements.pier_id = piers.id WHERE piers.end_date IS null AND ((SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 1 AND statements.pier_id = piers.id) = (SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 0 AND statements.pier_id = piers.id))) ON pier_ids = goods.pier_id GROUP BY pier_ids, pier_capacity, pier_status ORDER BY pier_ids
requests.sql.get.piers.free.count = SELECT COUNT(DISTINCT piers.id)  FROM piers LEFT JOIN statements ON statements.pier_id = piers.id WHERE piers.end_date IS null AND ((SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 1 AND statements.pier_id = piers.id) = (SELECT COUNT(statements.id) FROM statements WHERE statements.status_id = 3 AND statements.type_id = 0 AND statements.pier_id = piers.id))
requests.sql.get.piers.lastId = SELECT id FROM (SELECT id FROM piers ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.piers.capacity.residual =  SELECT (piers.capacity - COUNT(goods.name)) AS r_c FROM goods RIGHT JOIN piers ON piers.id = goods.pier_id WHERE piers.id = ? GROUP BY piers.id, piers.capacity

requests.sql.get.statements.allStatements = SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id
requests.sql.get.statements.byId = SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id WHERE statements.id = ?
requests.sql.get.statements.byStatus = SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id WHERE statements_statuses.id = ?
requests.sql.get.statements.user.byType = SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id WHERE users.id = ? AND statements_types.id = ? AND statements_statuses.title != 'CREATED' AND statements_statuses.title != 'APPROVED' ORDER BY statements.id
requests.sql.get.statements.count = SELECT count(*) FROM statements
requests.sql.get.statement.lastByUserId = SELECT * FROM (SELECT * FROM (SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id) statements WHERE user_id = ? ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.statements.type.byTitle = SELECT id AS type_id, title AS type_title FROM statements_types WHERE title = ?
requests.sql.get.statements.status.byTitle = SELECT id AS status_id, title AS status_title FROM statements_statuses WHERE title = ?
requests.sql.get.statement.finished.last = SELECT * FROM (SELECT * FROM (SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id) statements WHERE user_id = ? AND statements.status_title = 'FINISHED' ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.statement.last.byPier = SELECT * FROM (SELECT * FROM (SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id) statements WHERE pier_id = ? ORDER BY id DESC) WHERE ROWNUM = 1
requests.sql.get.statement.byShip = SELECT * FROM (SELECT statements.*, users.login, users.password, users.full_name, users.status_id AS user_status_id, users.role_id, users_roles.title AS role_title, users_statuses.title AS user_status_title, ships.title AS ship_title, piers.capacity as pier_capacity, statements_types.title AS type_title, statements_statuses.title AS status_title FROM statements LEFT JOIN piers ON statements.pier_id = piers.id JOIN ships ON statements.ship_id = ships.id JOIN users ON statements.user_id = users.id JOIN users_roles ON users.role_id = users_roles.id JOIN users_statuses ON users.status_id = users_statuses.id JOIN statements_types ON statements.type_id = statements_types.id JOIN statements_statuses ON statements.status_id = statements_statuses.id) statements WHERE ship_id = ?


requests.sql.get.products.allProducts = SELECT goods.name AS product_title, pier_id, COUNT(pier_id) AS count, piers.capacity AS pier_capacity, start_date, end_date FROM goods LEFT JOIN piers ON piers.id = goods.pier_id GROUP BY goods.name, pier_id, piers.capacity, start_date, end_date
requests.sql.get.products.productsInPier = SELECT goods.name AS product_title, pier_id, COUNT(pier_id) AS count, piers.capacity AS pier_capacity, start_date, end_date FROM goods LEFT JOIN piers ON piers.id = goods.pier_id WHERE goods.pier_id = ? GROUP BY goods.name, pier_id, piers.capacity, start_date, end_date
requests.sql.get.products.count = SELECT count(*) FROM goods WHERE pier_id = ? and name = ?

requests.sql.create.user = INSERT INTO users VALUES(?, ?, ?, ?, ?, ?)
requests.sql.create.ship = INSERT INTO ships VALUES(?, ?, ?)
requests.sql.create.pier = INSERT INTO piers VALUES(?, ?, ?, null)
requests.sql.create.statement = INSERT INTO statements VALUES(?, ?, ?, null, ?, ?, ?, null)
requests.sql.create.product = INSERT INTO goods VALUES(?, ?)

requests.sql.update.user = UPDATE users SET login = ?, password = ?, full_name = ?, status_id = ?, role_id = ? WHERE id = ?
requests.sql.update.pier = UPDATE piers SET id = ?, capacity = ? WHERE id = ?
requests.sql.update.statement.status = UPDATE statements SET status_id = ? WHERE id = ?
requests.sql.update.statement.pier = UPDATE statements SET pier_id = ? WHERE id = ?

requests.sql.delete.pier = UPDATE piers SET end_date = ? WHERE id = ?
requests.sql.delete.product = DELETE goods WHERE  pier_id = ? and name = ? and ROWNUM <= ?
requests.sql.delete.ship = DELETE ships WHERE id = ?

database.users.id = user_id
database.users.login = login
database.users.password = password
database.users.fullName = full_name
database.users.statusId = user_status_id
database.users.statusTitle = user_status_title
database.users.roleId = role_id
database.users.roleTitle = role_title

database.users.statuses.blocked = BLOCKED
database.users.statuses.online = ONLINE
database.users.statuses.offline = OFFLINE
database.users.statuses.deleted = DELETED

database.users.roles.administrator = ADMINISTRATOR
database.users.roles.dispatcher = DISPATCHER
database.users.roles.captain = CAPTAIN
database.users.roles.moderator = MODERATOR

database.piers.id = pier_id
#database.piers.ids = pier_ids
database.piers.capacity = pier_capacity
database.piers.capacity.residual = residual_capacity
database.piers.capacity.residual = r_c
database.piers.status = pier_status

database.ships.id = ship_id
database.ships.title = ship_title

database.statements.id = id
database.statements.typeId = type_id
database.statements.typeTitle = type_title
database.statements.statusId = status_id
database.statements.statusTitle = status_title
database.statements.doDate = do_statement_date
database.statements.finishDate = finish_statement_date

database.statements.statuses.created = CREATED
database.statements.statuses.approved = APPROVED
database.statements.statuses.rejected = REJECTED
database.statements.statuses.finished = FINISHED
database.statements.statuses.canceled = CANCELED

database.statements.types.enter = ENTER
database.statements.types.exit = EXIT

database.products.title = product_title
database.products.count = count


datebase.date.format = yyyy-mm-dd

serlvet.context.dao.users = userDao
serlvet.context.dao.usersRoles = userRoleDao
serlvet.context.dao.usersStatuses = userStatusDao
serlvet.context.dao.piers = pierDao
serlvet.context.dao.ships = shipDao
serlvet.context.dao.statements = statementDao
serlvet.context.dao.statementsStatuses = statementStatusDao
serlvet.context.dao.statementsTypes = statementTypeDao
serlvet.context.dao.products = productDao

servlet.requests.parametres.login = login
servlet.requests.parametres.password = password
servlet.requests.parametres.userIdToBlock = userIdToBlock
servlet.requests.parametres.userIdToUnblock = userIdToUnblock
servlet.requests.parametres.userIdToDelete = userIdToDelete
servlet.requests.parametres.userIdToEdit = userIdToEdit
servlet.requests.parametres.pierIdToDelete = pierIdToDelete
servlet.requests.parametres.shipIdToDelete = shipIdToDelete
servlet.requests.parametres.statementIdToReject = statementIdToReject
servlet.requests.parametres.statementIdToProcess = statementIdToProcess
servlet.requests.parametres.selectedPier = selectedPier
servlet.requests.parametres.statementId = statementId
servlet.requests.parametres.captainId = captainId
servlet.requests.patametres.user.login = userLogin
servlet.requests.patametres.user.password = userPassword
servlet.requests.patametres.user.fullName = userFullName
servlet.requests.patametres.user.role = role
servlet.requests.patametres.pier.capacity = pierCapacity
servlet.requests.patametres.ship.title = shipTitle
servlet.requests.patametres.user.current.id = currentUserId
servlet.requests.patametres.user.current.login = currentUserLogin
servlet.requests.patametres.user.current.password = currentUserPassword
servlet.requests.patametres.user.current.fullName = currentUserFullName
servlet.requests.patametres.user.current.role = currentUserRole

servlet.requests.attributes.errorMessage = errorMessage
servlet.requests.attributes.statementsToProcess = statementsToProcess
servlet.requests.attributes.captains = captainsData
servlet.requests.attributes.captains.ids = captainsIds
servlet.requests.attributes.port = portData
servlet.requests.attributes.users = usersData
servlet.requests.attributes.userToEdit = userToEdit
servlet.requests.attributes.users.roles = userRoles
servlet.requests.attributes.users.roles.selected = selectedUserRole
servlet.requests.attributes.piers = piersData
servlet.requests.attributes.ships = shipsData
servlet.requests.attributes.statement = statement
servlet.requests.attributes.users.blocked = blockedUsers
servlet.requests.attributes.users.unblocked = unblockedUsers
servlet.requests.attributes.enterStatements = enterStatements
servlet.requests.attributes.exitStatements = exitStatements
servlet.requests.attributes.buttonTitle = buttonTitle
servlet.requests.attributes.buttonTitle.cancel = Cancel
servlet.requests.attributes.buttonTitle.finish = Finish
servlet.requests.attributes.buttonCommand = buttonCommand
servlet.requests.attributes.buttonCommand.cancel = CANCEL_STATEMENT
servlet.requests.attributes.buttonCommand.finish = FINISH_STATEMENT
servlet.requests.attributes.productsData = productsData
servlet.session.attributes.user = user

exceptions.daoInit = Dao init failed! Cause: %s
exceptions.unknown = Unknown error
exceptions.sql.disconnect = Failed to disconnect from datastore! Cause: %s
exceptions.sql.request = Failed to request. Cause: %s
exceptions.login.userNotFound = User with login %s is not found 
exceptions.login.wrongPassword = Password is wrong
exceptions.login.blockUser = You are blocked
exceptions.captain.create.pier.capacity = Invalid capacity: %s
exceptions.captain.create.ship.title = Invalid title: %s
exceptions.captain.create.ship.captainId = Invalid captain id: %s

table.verticalDelimiter = |
table.horizontalDelimiterPiece = -

port.info.name = Port name

log.command.received = Received command: %s